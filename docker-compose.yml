services:
  php:
    image: vecitech/infinibrium:${TAG:-latest}
    restart: unless-stopped
    env_file:
      - .env.${ENV:-production}
    volumes:
      - storage:/var/www/html/infinibrium/storage
    networks:
      - appnet
    healthcheck:
      # Use the image's built-in healthcheck script
      test: ["CMD", "php-fpm-healthcheck"]
      interval: 10s # Check more frequently
      timeout: 5s   # Give it a bit more time if needed
      retries: 5    # Number of retries before marking unhealthy
      start_period: 30s # Give the container plenty of time to warm up before checks count

    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost/up"]
    #   interval: 30s
    #   timeout: 3s
    #   retries: 3

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    depends_on:
      php:
        condition: service_healthy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      # - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/default.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/ssl:/etc/ssl:ro
      - storage:/var/www/html/infinibrium/public/storage:ro
    networks:
      - appnet

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    # command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - redis-data:/data
    networks:
      - appnet
    # Add this healthcheck
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      # test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5


  horizon:
    image: vecitech/infinibrium:${TAG:-latest}
    restart: unless-stopped
    env_file:
      - .env.${ENV:-production}
    depends_on:
      redis:
        condition: service_healthy
      php:
        condition: service_healthy
    # command: ["php", "artisan", "horizon"]
    command: ["php", "/var/www/html/infinibrium/artisan", "horizon"]
    volumes:
      - storage:/var/www/html/infinibrium/storage
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "healthcheck-horizon"] # The command you provided
      interval: 10s # Check frequently
      timeout: 5s   # Give it time
      retries: 5    # Number of retries
      start_period: 60s

volumes:
  storage:
  redis-data:

networks:
  appnet:
    driver: bridge